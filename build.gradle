plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2" // AsciiDoc(Rest doc)
	// querydsl plugins 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}
// AsciiDoc(Rest doc) -- START --
ext {
	snippetsDir = file('build/generated-snippets')
	queryDslVersion = "5.0.0"
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor { // asciidoctor 작업 구성
	dependsOn test // test 작업 이후에 작동하도록 하는 설정
	inputs.dir snippetsDir // snippetsDir 를 입력으로 구성
	configurations 'asciidoctorExt'
}

// static/docs 폴더 비우기
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'src/main/resources/static/docs'
	}
}

task copyDocument(type: Copy) {
	dependsOn bootJar

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}
/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
	main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	asciidoctorExt
	// querydsl
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

// AsciiDoc(Rest doc) -- END --
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	asciidoctorExtensions // dependencies 에서 적용한 것 추가
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
	//ModelMapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.6'
	// MockMvc
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	// build/generated-snippets 에 생긴 .adoc 조각들을 프로젝트 내의 .adoc 파일에서 읽어들일 수 있도록 연동해줍니다.
	// 이 덕분에 .adoc 파일에서 operation 같은 매크로를 사용하여 스니펫 조각들을 연동할 수 있는 것입니다.
	// 그리고 최종적으로 .adoc 파일을 HTML로 만들어 export 해줍니다.
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	//DateTime
	implementation group: 'org.hibernate', name: 'hibernate-java8', version: '5.0.11.Final'
	//actuatorO
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// for apache kafka
	implementation 'org.springframework.kafka:spring-kafka'
	// GSON
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

	// querydsl dependencies 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	// FCM
	implementation 'com.google.firebase:firebase-admin:6.8.1'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	//OAUTH2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'


}


tasks.named('test') {
	useJUnitPlatform()
}

